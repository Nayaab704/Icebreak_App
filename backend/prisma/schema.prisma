// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) @map("_id")
  email     String    @unique
  username  String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  password  String
  isOnline  Boolean   @default(false)
  age       Int
  Videos    Video[]
  Messages  Message[]
  Group     Group?    @relation(fields: [groupId], references: [id])
  groupId   String?
}

model Group {
  id           String       @id @default(cuid()) @map("_id")
  users        User[]
  name         String
  createdAt    DateTime     @default(now())
  Messages     Message[]
  groupTopicId String
  GroupTopic   GroupTopic[]
}

model Video {
  id        String    @id @default(cuid()) @map("_id")
  url       String
  createdAt DateTime  @default(now())
  uploader  User      @relation(fields: [userId], references: [id])
  userId    String
  // Can't read the last attribute in the photo
  Messages  Message[]
}

model Message {
  id        String   @id @default(cuid()) @map("_id")
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
  topicId   String
  sender    User     @relation(fields: [userId], references: [id])
  userId    String
  content   String
  // Can't read attribute above videoId
  video     Video    @relation(fields: [videoId], references: [id])
  videoId   String
  replies   Reply[]
  createdAt DateTime @default(now())
}

model Reply {
  id        String   @id @default(cuid()) @map("_id")
  Message   Message? @relation(fields: [messageId], references: [id])
  messageId String?
  content   String
  createdAt DateTime @default(now())
}

model Topic {
  id          String       @id @default(cuid()) @map("_id")
  title       String
  description String
  createdAt   DateTime     @default(now())
  date        DateTime
  GroupTopic  GroupTopic[]
  Messages    Message[]
}

model GroupTopic {
  id           String   @id @default(cuid()) @map("_id")
  groupId      String
  topic        Topic    @relation(fields: [topicId], references: [id])
  topicId      String
  assignedDate DateTime
  createdAt    DateTime @default(now())
  Group        Group    @relation(fields: [groupId], references: [id])
}
